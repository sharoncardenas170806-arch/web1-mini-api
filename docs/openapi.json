{
  "openapi": "3.0.3",
  "info": {
    "title": "API Mini Proyecto – Productos",
    "version": "1.0.0",
    "descripcion": "API de ejemplo con CRUD de productos, validación, autenticación básica y documentación en Swagger."
  },

  "servers": [
    { "url": "http://localhost:3000" }
  ],

  "tags": [
    { "name": "Sistema", "description": "Endpoints del sistema / salud" },
    { "name": "Productos", "description": "Gestión de productos" }
  ],

  "paths": {
    "/salud": {
      "get": {
        "tags": ["Sistema"],
        "summary": "Estado del servicio",
        "responses": {
          "200": { "descripcion": "OK" }
        }
      }
    },

    "/api/productos": {
      "get": {
        "tags": ["Productos"],
        "summary": "Listar productos",
        "parameters": [
          {
            "name": "nombre",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filtra por nombre que contenga el texto.",
            "example": "cámara"
          },
          {
            "name": "precioMinimo",
            "in": "query",
            "schema": { "type": "number" },
            "description": "Precio mínimo.",
            "example": 50
          },
          {
            "name": "precioMaximo",
            "in": "query",
            "schema": { "type": "number" },
            "description": "Precio máximo.",
            "example": 300
          },
          {
            "name": "pagina",
            "in": "query",
            "schema": { "type": "integer", "minimum": 1 },
            "description": "Número de página (por defecto 1).",
            "example": 1
          },
          {
            "name": "papelera",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Usa 'true' para ver solo elementos borrados.",
            "example": "false"
          }
        ],
        "responses": {
          "200": { "descripcion": "Listado paginado" }
        }
      },

      "post": {
        "tags": ["Productos"],
        "summary": "Crear producto",
        "descripcion": "Crea un nuevo producto. Campos requeridos: `name` y `price`.",
        "security": [ { "basicAuth": [] } ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "descripcion": "Nombre del producto (2–60 caracteres)."
                  },
                  "price": {
                    "type": "number",
                    "descripcion": "Precio en moneda local (≥ 0)."
                  },
                  "stock": {
                    "type": "integer",
                    "descripcion": "Unidades en inventario (≥ 0). Por defecto 0."
                  },
                  "descripcion": {
                    "type": "string",
                    "descripcion": "Descripción breve (opcional, máx. 200)."
                  }
                },
                "required": ["name", "price"],
                "example": {
                  "name": "Cámara HD",
                  "price": 199.99,
                  "stock": 5,
                  "descripcion": "1080p, sensor CMOS"
                }
              }
            }
          }
        },
        "responses": {
          "201": { "descripcion": "Creado: devuelve el producto con su id" },
          "400": { "descripcion": "Datos inválidos (falló la validación)" },
          "401": { "descripcion": "No autorizado (falta Basic Auth)" }
        }
      }
    },

    "/api/productos/{id}": {
      "get": {
        "tags": ["Productos"],
        "summary": "Obtener producto",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "descripcion": "OK" },
          "404": { "descripcion": "No encontrado" }
        }
      },

      "put": {
        "tags": ["Productos"],
        "summary": "Actualizar producto",
        "security": [ { "basicAuth": [] } ],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "descripcion": "Envíe al menos un campo para actualizar.",
                "properties": {
                  "name": { "type": "string", "descripcion": "Nombre (2–60 caracteres)." },
                  "price": { "type": "number", "descripcion": "Precio (≥ 0)." },
                  "stock": { "type": "integer", "descripcion": "Stock (≥ 0)." },
                  "descripcion": { "type": "string", "descripcion": "Descripción (máx. 200)." }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "descripcion": "Actualizado" },
          "400": { "descripcion": "Datos inválidos" },
          "404": { "descripcion": "No encontrado" }
        }
      },

      "delete": {
        "tags": ["Productos"],
        "summary": "Eliminar producto (borrado lógico a papelera)",
        "security": [ { "basicAuth": [] } ],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "204": { "descripcion": "Sin contenido (marcado como borrado)" },
          "404": { "descripcion": "No encontrado" }
        }
      }
    },

    "/api/productos/{id}/restaurar": {
      "post": {
        "tags": ["Productos"],
        "summary": "Restaurar producto desde la papelera",
        "security": [ { "basicAuth": [] } ],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "descripcion": "Restaurado" },
          "404": { "descripcion": "No encontrado o no está en la papelera" }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic",
        "descripcion": "Usuario y contraseña definidos por variables de entorno (BASIC_USER, BASIC_PASS)."
      }
    }
  }
}
